package com.sungardas.snapdirector.aws.dynamodb.model;

import java.text.ParseException;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.Map;

import org.quartz.CronExpression;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "Schedule")
public class Schedule {

	@DynamoDBAutoGeneratedKey
    @DynamoDBHashKey(attributeName = "id")
	private String id;
	
	@DynamoDBAttribute(attributeName = "cron")
	private String cron;
	
	@DynamoDBAttribute(attributeName = "enabled")
	private boolean enabled;
	
	@DynamoDBAttribute(attributeName = "name")
	private String name;
	
	@DynamoDBAttribute(attributeName = "volumeId")
	private String volumeId;
	
	@DynamoDBAttribute(attributeName = "nextFire")
	private long nextFire;
	
	public Schedule(){}
	
	public Schedule(String id, String cron, Boolean enabled, String name, String volumeId) throws ParseException {
		this.id = id;
		this.cron = cron;
		this.enabled = enabled;
		this.name = name;
		this.volumeId = volumeId;
		CronExpression exp = new CronExpression(cron);
		long nextFire = exp.getNextValidTimeAfter(new Date()).getTime();
		this.nextFire = nextFire;
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getCron() {
		return cron;
	}

	public void setCron(String cron) {
		this.cron = cron;
	}

	public boolean isEnabled() {
		return enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getVolumeId() {
		return volumeId;
	}

	public void setVolumeId(String volumeId) {
		this.volumeId = volumeId;
	}

	public long getNextFire() {
		return nextFire;
	}

	public void setNextFire(long nextFire) {
		this.nextFire = nextFire;
	}
	
	
}
